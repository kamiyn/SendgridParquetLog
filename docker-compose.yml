services:
  # SendGrid Webhook Logger Service
  sendgrid-logger:
    build:
      context: .
      dockerfile: SendgridParquetLogger/Dockerfile
    platform: linux/amd64
    container_name: sendgrid-parquet-logger
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - S3__ACCESSKEY=${S3__ACCESSKEY:-minioadmin}
      - S3__SECRETKEY=${S3__SECRETKEY:-minioadmin}
      - S3__SERVICEURL=${S3__SERVICEURL:-http://minio:9000}
      - S3__BUCKETNAME=${S3__BUCKETNAME:-sendgrid-events}
    depends_on:
      - minio
    restart: unless-stopped
    networks:
      - sendgrid-network

  # SendGrid Parquet Viewer Service  
  sendgrid-viewer:
    build:
      context: .
      dockerfile: SendgridParquetViewer/Dockerfile
    platform: linux/amd64
    container_name: sendgrid-parquet-viewer
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - S3__ACCESSKEY=${S3__ACCESSKEY:-minioadmin}
      - S3__SECRETKEY=${S3__SECRETKEY:-minioadmin}
      - S3__SERVICEURL=${S3__SERVICEURL:-http://minio:9000}
      - S3__BUCKETNAME=${S3__BUCKETNAME:-sendgrid-events}
    depends_on:
      - minio
      - sendgrid-logger
    restart: unless-stopped
    networks:
      - sendgrid-network

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    platform: linux/amd64
    container_name: sendgrid-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped
    networks:
      - sendgrid-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  # redis:
  #   image: redis:alpine
  #   platform: linux/amd64
  #   container_name: sendgrid-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   restart: unless-stopped
  #   networks:
  #     - sendgrid-network

volumes:
  minio-data:
    driver: local
  # redis-data:
  #   driver: local

networks:
  sendgrid-network:
    driver: bridge