# ================ Build stage ================
FROM mcr.microsoft.com/dotnet/sdk:10.0 AS build
WORKDIR /src

# Accept build-time variables from CI
ARG VERSION
ARG GITHUB_RUN_NUMBER
ARG GITHUB_SHA

# Copy source code
COPY SendgridParquetLogger/ SendgridParquetLogger/
COPY SendgridParquetLog.ServiceDefaults/ SendgridParquetLog.ServiceDefaults/
COPY SendgridParquet.Shared/ SendgridParquet.Shared/

# Restore dependencies
RUN dotnet restore SendgridParquetLogger/SendgridParquetLogger.csproj

WORKDIR /src/SendgridParquetLogger
RUN dotnet publish -c Release -r linux-x64 \
 -p:PublishTrimmed=true \
 -p:PublishAot=false \
 -p:VERSION=${VERSION:-0.0.0} \
 -p:GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER} \
 -p:GITHUB_SHA=${GITHUB_SHA} \
 -o /app/publish

# ================ Runtime stage ================
# Using Alpine for minimal size
# 107MB: alpine:3.22, 105MB: alpine:3.20
#
# 182MB: FROM mcr.microsoft.com/dotnet/runtime:10.0-alpine-amd64
# 158MB: FROM mcr.microsoft.com/dotnet/aspnet:10.0-noble-chiseled
FROM mcr.microsoft.com/dotnet/aspnet:10.0-noble-chiseled AS runtime
WORKDIR /app

# Copy published output
COPY --from=build /app/publish .

# Ensure native libraries from publish are discoverable
ENV LD_LIBRARY_PATH=/app

# Set environment variables
ENV ASPNETCORE_URLS=http://+:8080
ENV ASPNETCORE_ENVIRONMENT=Production

EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health6QQl || exit 1

ENTRYPOINT ["dotnet", "SendgridParquetLogger.dll"]
